/*
 * CLOUD API
 * An enterprise-grade Infrastructure is provided as a Service (IaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.   The API allows you to perform a variety of management tasks such as spinning up additional servers, adding volumes, adjusting networking, and so forth. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ionoscloud.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ionoscloud.model.ResourceReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ServerProperties
 */
public class ServerPropertiesTest {
    private final ServerProperties model = new ServerProperties();

    /**
     * Model tests for ServerProperties
     */
    @Test
    public void testServerProperties() {
        // TODO: test ServerProperties
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'cores'
     */
    @Test
    public void coresTest() {
        // TODO: test cores
    }

    /**
     * Test the property 'ram'
     */
    @Test
    public void ramTest() {
        // TODO: test ram
    }

    /**
     * Test the property 'availabilityZone'
     */
    @Test
    public void availabilityZoneTest() {
        // TODO: test availabilityZone
    }

    /**
     * Test the property 'vmState'
     */
    @Test
    public void vmStateTest() {
        // TODO: test vmState
    }

    /**
     * Test the property 'bootCdrom'
     */
    @Test
    public void bootCdromTest() {
        // TODO: test bootCdrom
    }

    /**
     * Test the property 'bootVolume'
     */
    @Test
    public void bootVolumeTest() {
        // TODO: test bootVolume
    }

    /**
     * Test the property 'cpuFamily'
     */
    @Test
    public void cpuFamilyTest() {
        // TODO: test cpuFamily
    }

}
